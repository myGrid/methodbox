<%= javascript_include_tag "sharing.js" -%>
<%= javascript_include_tag 'survey_checkbox.js' -%>
<%= stylesheet_link_tag 'survey_ul'%>
<%= stylesheet_link_tag 'faux_table'%>

<% if !@survey_hash.empty? %>
  <% if !Survey.all.empty? && !Dataset.all.empty? -%>
    <% @survey_search_query="Enter search terms" unless @survey_search_query -%>
    <% @survey_search_query= params[:survey_search_query] unless params[:survey_search_query]==nil -%>
    <div class="show_basic" style="padding-right: 2em;">
      <div id="survey_selector">
        <% form_tag(:action => "search_variables") do -%>
          <%= hidden_field_tag "page", 1 -%>
          <%= hidden_field_tag "per_page", 10 -%>
          <br/>
          <% if !logged_in? -%>
            <h2>Welcome, guest.  Please select some surveys and search for variables of interest to your research.  You can browse the metadata and see what is inside the MethodBox but only <%= link_to "registered users", signup_url -%> can add variables to their cart and download them.</h2><br/>
          <% else -%>
            <h2>Select some surveys, enter a search term and click the button to find some variables</h2><br/>
          <% end -%>
          <%= render :partial => "selection_bar" -%>
          <br/>
          <br/>
          <div id="currently_selected_datasets" style="display:none;">Currently selected datasets:</div>
          <div id="datasets_list"> 
            <%= render :partial => "dataset_list", :locals => { :survey_hash => @survey_hash } -%>
          </div>
          <% cache ["surveys_index_", current_user_or_none].join do -%>
            <div class="yui-skin-sam">
              <div id="surveys" class="yui-navset">
                <ul class="yui-nav">
                  <% tab_count = 1 %>
                  <% @survey_hash.each_key do |key| -%>
                    <% if tab_count == 1 %>
                      <li class="selected"><a href="#survey_tab_<%= tab_count.to_s -%>" title="<%= @survey_hash[key][0].survey_type.name == 'Health Survey for England' || @survey_hash[key][0].survey_type.name == 'General Household Survey' ? @survey_hash[key][0].survey_type.name + ' (MethodBox version - contains metadata from non nesstar source)' : @survey_hash[key][0].survey_type.name -%>"><em><%= h truncate(@survey_hash[key][0].survey_type.name == 'Health Survey for England' || @survey_hash[key][0].survey_type.name == 'General Household Survey' ? @survey_hash[key][0].survey_type.name + ' (MethodBox version)' : @survey_hash[key][0].survey_type.name, :length=> 70, :omission => '...') %></em></a></li>
                    <% else %>
                      <li><a href="#survey_tab_<%= tab_count.to_s -%>" title="<%= @survey_hash[key][0].survey_type.name == 'Health Survey for England' || @survey_hash[key][0].survey_type.name == 'General Household Survey' ? @survey_hash[key][0].survey_type.name + ' (MethodBox version - contains metadata from non nesstar source)' : @survey_hash[key][0].survey_type.name -%>"><em><%= h truncate(@survey_hash[key][0].survey_type.name == 'Health Survey for England' || @survey_hash[key][0].survey_type.name == 'General Household Survey' ? @survey_hash[key][0].survey_type.name + ' (MethodBox version)' : @survey_hash[key][0].survey_type.name, :length=> 70, :omission => '...') %></em></a></li>
                    <% end %>
	            <% tab_count += 1 %>
                  <% end %>
                </ul>            
                <div class="yui-content">
                  <% tab_id = 1 -%>
                  <% @survey_hash.each_key do |key| -%>
                    <div id="<%= 'survey_tab_' + tab_id.to_s -%>"><%= render :partial => "single_survey_check", :locals => { :tab_id => tab_id, :key => key, :collection => @survey_hash, :selected => Array.new, :authorization_for_showing_already_done=>true }  %></div>
	            <% tab_id += 1 -%>
                  <% end %>
                </div>
              </div>
            </div>
          <% end -%>
        <% end -%>
      </div>
    </div>
  <% else %>
    <% if logged_in? %>
      <% if Survey.all.empty? %>
        <h1>There are no surveys loaded into the methodbox at the moment.</h1>
          <p class="center"> Why not <%= link_to "upload a new survey", new_survey_path -%></p>
      <% else %>
        <h1>There are no surveys with datasets in the methodbox at the moment. </h1>
        <p class="center">Select a survey from the list and add a dataset to it.</p>
        <%= render :partial => "survey_list" -%>
      <% end -%>
    <% else %>
      <h1>There are no surveys loaded into the methodbox at the moment.</h1>
    <% end -%>
  <% end -%>
  <% if !@empty_surveys.empty? %>
    <h3>Surveys without any datasets</h3>
      <% @empty_surveys.each do |survey| %>
        <%= link_to survey.title, survey_url(survey) -%>
      <% end -%>
  <% end -%>
<% else %>
  <h1>There are no surveys available to view.</h1>
<% end %>
<script type="text/javascript">
// The initially selected tab will be chosen in the following order:
    //
    // URL fragment identifier (it will be there if the user previously
    // bookmarked the application in a specific state)
    //
    //         or
    //
    // "tab0" (default)

    var bookmarkedTabViewState = YAHOO.util.History.getBookmarkedState("tabview");
    var initialTabViewState = bookmarkedTabViewState || "survey_tab_0";

    var tabView;

    // Register our TabView module. Module registration MUST
    // take place before calling YAHOO.util.History.initialize.
    YAHOO.util.History.register("tabview", initialTabViewState, function (state) {
        // This is called after calling YAHOO.util.History.navigate, or after the user
        // has trigerred the back/forward button. We cannot discrminate between
        // these two situations.

        // "state" can be "survey_tab_1", "survey_tab_2" etc.
        // Select the right tab:
        tabView.set("activeIndex", state);
    });

    function handleTabViewActiveTabChange (e) {
        var newState, currentState;

        newState = "survey_tab_" + this.getTabIndex(e.newValue);

        try {
            currentState = "survey_tab_" + YAHOO.util.History.getCurrentState("tabview");
            // The following test is crucial. Otherwise, we end up circling forever.
            // Indeed, YAHOO.util.History.navigate will call the module onStateChange
            // callback, which will call tabView.set, which will call this handler
            // and it keeps going from here...
            if (newState != currentState) {
		        splitState = newState.split("_");
                YAHOO.util.History.navigate("tabview", newState);
            }
        } catch (e) {
		        splitState = newState.split("_");
            	tabView.set("activeIndex", splitState.pop());
        }
    }

    function initTabView () {
        // Instantiate the TabView control...
        tabView = new YAHOO.widget.TabView("surveys");
        tabView.addListener("activeTabChange", handleTabViewActiveTabChange);
    }

    // Use the Browser History Manager onReady method to instantiate the TabView widget.
    YAHOO.util.History.onReady(function () {
        var currentState;

        initTabView();

        // This is the tricky part... The onLoad event is fired when the user
        // comes back to the page using the back button. In this case, the
        // actual tab that needs to be selected corresponds to the last tab
        // selected before leaving the page, and not the initially selected tab.
        // This can be retrieved using getCurrentState:
        currentState = YAHOO.util.History.getCurrentState("tabview");
	splitState = currentState.split("_");
        tabView.set("activeIndex", splitState.pop());
    });

    // Initialize the browser history management library.
    try {
        YAHOO.util.History.initialize("yui-history-field", "yui-history-iframe");
    } catch (e) {
        // The only exception that gets thrown here is when the browser is
        // not supported (Opera, or not A-grade) Degrade gracefully.
        initTabView();
    }
</script>
<script type="text/javascript">
  document.observe('dom:loaded', function() {
    uncheckAll();
  });
</script>